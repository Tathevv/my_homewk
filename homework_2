# 1. Create a python program which will say which number used more. my_list = [1, 3, 4, 5, 1, 2, 3, 1] output: number 1 - 3 times

def more_used(my_list):
    count = {}
    for num in my_list:
        if num in count:
            count[num] += 1
        else:
            count[num] = 1

        most_common = max(count, key=count.get)


        return most_common

my_list = [1, 3, 4, 5, 1, 2, 3, 1]
most_common = more_used(my_list)
print(f" number is: {most_common}")



# 2. Write a Python program to sum all the items in a list. use list comprehension

 	my_list = [1,3,5,7,9]
	sum_list = sum([i for i in my_list])
	print(sum_list)

# 3. Write a Python program to get the largest text from a list.

from functools import reduce
text = ['green', 'red', 'yellow', 'blue']
the_largest = reduce(lambda x, y: x if len(x) > len(y) else y, text)
print(the_largest)

 4. Write a Python program that have two lists and returns True if they have at
# least one common member.

list_one = ["bmw", "jeep", "bugatti"]
list_two = ["bugatti", "mercedes", "toyota"]
for x in list_one:
 for y in list_two:
    if x == y:
        result = True
        print(result)
    else:
        break

#5. Write a Python program to Sort Words in Alphabetic Order

-----------


# 6. Write a Python program that creates a generator function that generates all
# prime numbers between two given numbers.
	def is_prime(number):
	    if number <= 1:
	        return False
	    elif number == 2:
	        return True
	    elif number % 2 == 0:
	        return False
	    else:
	        for i in range(3, int(number**0.5) + 1, 2):
	            if number % i == 0:
	                return False
	        return True
	
	def prime_generator(start, end):
	    for number in range(start, end + 1):
	        if is_prime(number):
	            yield number
	
	start = 5
	end = 25
	for prime in prime_generator(start, end):
	    print(prime, end=" ")


# 7. Create python program which will check if your password is strong or no. if Len your password is great than 8 and if your password have 2 numbers and 2 of the following special characters ('!', '@', '#', '$', '%', '&', '*')

	def strong_pass(password):
	    if len(password) < 8:
	        return False
	    num_count = sum(i.isdigit() for i in password)
	    special_count = sum(i in '!@#$%&*' for i in password)
	
	    if num_count < 2 or special_count < 2:
	     return False
	    return True
	
	password = input("Enter password: ")
	if strong_pass(password):
	    print("Your password is strong!")
	else:
	    print("It's not strong")

#8. 
------------

9. Write a Python program that implements a decorator to validate function arguments
# based on a given condition.


	def validation(condition):
	    def decorator(func):
	        def wrapper(*args, **kwargs):
	            if condition(*args, **kwargs):
	                return func(*args, **kwargs)
	            else:
	                raise ValueError("Arguments failed validation")
	        return wrapper
	    return decorator
	
	@validation(lambda x, y: x > 0 and y > 0)
	def divide(x, y):
	    return x / y
	
	try:
	    result = divide(-20, 0)
	except ValueError as e:
	    print("Error:", e)
	
	try:
	    result = divide(15, 5)
	    print("Result:", result)
	except ValueError as e:
	    print("Error:", e)
