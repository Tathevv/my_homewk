// 1. Write a python class to find max, min num and and sum in your list:

    class counts:
        def __init__(self, num):
            self.num = num
    
        def max(self):
            if not self.num:
                return None
            max_num = self.num[0]
            for i in self.num:
                if i > max_num:
                    max_num = i
            return max_num
    
        def min(self):
            if not self.num:
                return None
            min_num = self.num[0]
            for i in self.num:
                if i < min_num:
                    min_num = i
            return min_num
    
        def sum(self):
            sum_num = 0
            for num in self.num:
                sum_num += num
            return sum_num
    
    numbers = [3, 5, 6, 2, 8, 10]
    number = counts(numbers)
    
    print(number.max())
    print(number.min())
    print(number.sum())

// 2. Write a python class to find two highest values in your dict:

      class highest_values:
          def __init__(self, dict):
              self.dict = dict
      
          def find_two_highest(self):
              if not self.dict:
                  return None
      
              sorted_items = sorted(self.dict.items(), key=lambda x: x[1])
      
              highest_two_values = sorted_items[-2:]
      
              return highest_two_values
      
      
      my_dict = {'a': 10, 'b': 20, 'c': 15, 'd': 25, 'e': 5}
      
      two_highest = highest_values(my_dict)
      
      print(two_highest.find_two_highest())



// 4. Write a Python class named Rectangle constructed by a length and width and a method which will compute the area of a rectangle.

        class Rectangle:
            def __init__(self, length, width):
                self.length = length
                self.width = width
        
            def area_rec (self):
                area = self.length * self.width
                return area
        
        rectangle = Rectangle(5, 10)
        
        area = rectangle.area_rec()
        print(area)



// 5. Write a python class where we use polymorphism:


            class Computer:
                def type(self):
                    raise NotImplementedError("error")
            
            class Laptop(Computer):
                def type(self):
                    return "This is a laptop."
            
            
            class Desktop(Computer):
                def type(self):
                    return "This is a desktop computer."
            
            
            def display_type(computer):
                return computer.type()
            
            laptop = Laptop()
            desktop = Desktop()
            
            print("Laptop Specifications:", display_type(laptop))
            print("Desktop Specifications:", display_type(desktop))



// 6. Create a class Change:You have 3 methods in your class:


        class Change:
        
            def Usd_to_Amd(self, amount):
                return amount * 485.75
            def Usd_to_Eur(self, amount):
                return amount * 0.88
        
            def Usd_to_Ru(self, amount):
                return amount * 74.61
        
        changer = Change()
        
        amount_usd = 100
        amount_amd = changer.Usd_to_Amd(amount_usd)
        amount_eur = changer.Usd_to_Eur(amount_usd)
        amount_ru = changer.Usd_to_Ru(amount_usd)
        
        print(f"{amount_usd} equals to {amount_eur} EUR")
        print(f"{amount_usd}  equal to {amount_amd} AMD")
        print(f"{amount_usd} equal to {amount_ru} RU")



